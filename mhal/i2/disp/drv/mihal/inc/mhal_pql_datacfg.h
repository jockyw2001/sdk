#ifndef _MHAL_PQL_DATACFG_H
#define _MHAL_PQL_DATACFG_H

#include "mhal_pql_datatype.h"

#define DUAL_XC_ENABLE              0
#define DEBUG_DLC_INIT_DATA         0
#define DLC_DEFAULT_TABLE_INDEX     0
#define ENABLE_DLC                  0
#define ENABLE_ACE                  0
#define ENABLE_BW                   0
#define DNR_DBG_GRULE               (0x0008)///< Debug G RULE
#define BRIGHTNESS_BYPASS                   128
#define ENABLE_DYNAMIC_NR                   1
#define DYNAMIC_NR_TBL_REG_NUM              8
#define DYNAMIC_NR_TBL_LUMA_LEVEL_NUM       8
#define DYNAMIC_NR_TBL_MOTION_LEVEL_NUM     6


#if (DUAL_XC_ENABLE == 1)
#define SC1_DRIVER_VERSION      0
#define SC1_DEVICE_ID           1
#endif

#ifndef ENABLE_NEW_AUTO_NR
#define ENABLE_NEW_AUTO_NR 0
#endif

#ifndef PQ_DISABLE_UC_FOR_PIP
#define PQ_DISABLE_UC_FOR_PIP        0
#endif

#define NR_DBG(x) //x
#define DNR_DBG 0
#define CONFIG_DBG(x) //x
#define XCPERFMSG(x)    //{printf("[XC][PERF] ");x;}

#if ENABLE_DYNAMIC_NR
   MAPI_PQL_DYNAMIC_NR_MISC_PARAM* tDynamicNRTbl_MISC_Param = NULL;
   MAPI_PQL_DYNAMIC_NR_MISC_PARAM_LUMA* tDynamicNRTbl_MISC_Luma =NULL;
   MAPI_PQL_DYNAMIC_NR_MISC_PARAM_NOISE* tDynamicNR_MISC_Noise =NULL;
#endif

#define IsSrcVga(x)             (((x) == MAPI_INPUT_SOURCE_VGA) ? TRUE : FALSE)///< x is VGA
#define IsSrcComp(x)            ((((x) >= MAPI_INPUT_SOURCE_YPBPR) && ((x) < MAPI_INPUT_SOURCE_YPBPR_MAX)) ? TRUE : FALSE)
#define IsSrcAnalog(x)          ((IsSrcVga(x) || IsSrcComp(x)) ? TRUE : FALSE)///< x is Analog

#define ASSERT(_x_)                                                                         \
       do  {                                                                                   \
           if ( ! ( _x_ ) )                                                                    \
           {                                                                                   \
               printk("ASSERT FAIL: %s %s %d\n", __FILE__, __PRETTY_FUNCTION__, __LINE__);                                                                            \
           }                                                                                   \
       } while (0)

#define STATIC_ASSERT(_x_)                              \
               do {                                                \
                   char c[(_x_)?(1):(-1)];          \
                   c[0]='\0';                            \
                   c[0]= c[0];                            \
               } while (0)


#define  NoiseMagTh0    0
#define  NoiseMagTh1    1
#define  NoiseMagTh2    2
#define  NoiseMagTh3    3
#define  NoiseMagTh4    4
#define  NoiseMagTh5    5
#define  NoiseMagTh6    6
#define  NoiseMagTh7    7
#define  NoiseMagTh8    8


   // MS_U16 u16DisplayWidth = 0;
    //MS_U16 u16DisplayHeight = 0;

    //---------------------------------------------------------------
    // Variable
    //---------------------------------------------------------------
    MS_U8 m_u8Status_NR;

    MAPI_INPUT_SOURCE_TYPE m_enCurrInputSrcType = MAPI_INPUT_SOURCE_STORAGE;

    MAPI_PQ_WIN m_enPQWin = MAPI_PQ_MAIN_WINDOW;
    MAPI_PQL_NR_LEVEL m_enCurrNRLevel;

    MS_BOOL m_bEnableDLC;
#if ENABLE_DYNAMIC_NR
    //------------------------ Common ------------------------
    MS_U16 m_u16PreDynamicNR_Y0[DYNAMIC_NR_TBL_REG_NUM];
    MS_U16 m_u16PreDynamicNR_Y1[DYNAMIC_NR_TBL_REG_NUM];
    MS_U16 m_u16PreCoringOffset[2];

    //------------------------ HDMI COMP ------------------------
    MS_U16  m_u8PreMotionLvl;
    MS_U16  m_u8PreLumaLvl;
    MS_U16  m_u8PreMotion;
    MS_U16  m_u8PreAverageLuma;
    MS_U16  m_u16PreSNROffset;

    //-----------------------  VD -----------------------
    MS_U16 m_u16PreSharpOffset;
    MS_U16 m_u16PreSC_Coring;
    MS_U16 m_u16PreGNR_0;
    MS_U16 m_u16PreSpikeNR_1;
    MS_U16 m_u16PreGrayGuard_Gain;
    MS_U8  m_u8PreNoiseMag;


    MS_U8 m_u8DynamicNR_Y[DYNAMIC_NR_TBL_REG_NUM];
    MAPI_PQL_DYNAMIC_NR_MISC_PARAM_NOISE m_stDynamicNR_MISC_Noise;
    MAPI_PQL_DYNAMIC_NR_MISC_PARAM_LUMA m_stDynamicNR_MISC_Luma;
    MAPI_PQL_DYNAMIC_NR_MISC_PARAM      m_stDynamicNR_MISC_Param;

    MS_U8 m_u8NoiseMagReadCnt;
    MS_U16 m_u16NoiseMag;
    MS_U8 m_u8NoiseMag;

    MS_U8 m_u8BK_SC_VPS_60_H; //-- SNR
    MS_U8 m_u8BK_SC_VPS_13_L; //-- Coring
    MS_U8 m_u8BK_SC_VPS_13_H; //-- Sharpness
    MS_U8 m_u8BK_AFEC_44;     //-- Fixed AGC level
#endif

    MAPI_PQL_PIP_MODE m_ePIPMode;
    MAPI_PQL_PIP_MODE m_ePrePIPMode;

    static MS_U8 m_ppu8tDynamicNRTbl_Motion[6][8]       = {                \
                    {0xE8, 0xCD, 0xAB, 0x89, 0x67, 0x45, 0x23, 0x00}, \
                    {0xD8, 0xBC, 0x9A, 0x78, 0x56, 0x34, 0x12, 0x00}, \
                    {0xC8, 0xAB, 0x89, 0x67, 0x45, 0x23, 0x01, 0x00}, \
                    {0xB8, 0x9A, 0x78, 0x56, 0x34, 0x12, 0x00, 0x00}, \
                    {0xA8, 0x89, 0x67, 0x45, 0x23, 0x01, 0x00, 0x00}, \
                    {0x98, 0x78, 0x56, 0x34, 0x12, 0x00, 0x00, 0x00}, };

    static MS_U8 m_ppu8tDynamicNRTbl_Noise[5][8] = {                      \
                    {0x67, 0x45, 0x34, 0x23, 0x12, 0x01, 0x00, 0x00}, \
                    {0xAB, 0x89, 0x67, 0x45, 0x23, 0x12, 0x01, 0x00}, \
                    {0xBC, 0x9A, 0x78, 0x56, 0x34, 0x23, 0x01, 0x00}, \
                    {0xDE, 0xBC, 0x9A, 0x78, 0x56, 0x34, 0x12, 0x00}, \
                    {0xEF, 0xCD, 0xAB, 0x89, 0x67, 0x45, 0x23, 0x00}, };

    static const MS_S16 S16BypassColorCorrectionMatrix[] =
                    {
                    0x0400, 0x0000, 0x0000, 0x0000, 0x0400, 0x0000, 0x0000, 0x0000,
                    0x0400,-0x02E6, 0x0288,-0x05BB, 0x07A4,-0x062C, 0x06F3,-0x073C,
                    -0x0024, 0x01BF, 0x07EF,-0x0116, 0x01EE, 0x052C,-0x03BB, 0x00B1,
                    -0x0831, 0x0100,-0x0000, 0x0000,-0x0000, 0x0000, 0x0000, 0x0000,
                    };

    MS_S16 s16DefaultColorCorrectionMatrix[] =
                    {
                    0x0476, 0x0000, 0x0000, 0x0000, 0x0360, 0x0000, 0x0000, 0x0000, \
                    0x0400,-0x06CB, 0x06C1,-0x07B3, 0x057D,-0x0676, 0x065D,-0x0289, \
                    -0x0336, 0x0106, 0x0015,-0x0428, 0x01E1, 0x0507,-0x0234, 0x0594, \
                    -0x0831, 0x0100,-0x0000, 0x0000,-0x0000, 0x0000, 0x0000, 0x0000, \
                    };
    MS_U8 m_ppu8tDynamicNRTbl_MISC_Luma[8][2]=
        {   {0x33, 0x08}, \
            {0x33, 0x07}, \
            {0x22, 0x06}, \
            {0x22, 0x05}, \
            {0x11, 0x04}, \
            {0x11, 0x03}, \
            {0x00, 0x02}, \
            {0x00, 0x01}, };
    MS_U8 m_u8tDynamicNRTbl_MISC_Luma_rows = 8;
    MS_U8 m_u8tDynamicNRTbl_MISC_Luma_cols = 2;

    MS_U8 m_ppu8tDynamicNRTbl_MISC_Param[4][4] =
        {   {0x02,    0xFF,   0x00,     0x00}, \
            {0x02,    0xFF,   0x01,     0x66}, \
            {0x03,    0x88,   0x01,     0x66}, \
            {0x03,    0xAA,   0x01,     0x66}, };

    MS_U8 m_u8tDynamicNRTbl_MISC_Param_rows = 4;
    MS_U8 m_u8tDynamicNRTbl_MISC_Param_cols = 4;

    //Gamma table
    static MS_U8 au8NormalGammaR[] =
    {
        0x80,0x00,0x01,0x80,0x03,0x04,0x91,0x06,0x07,
        0x91,0x09,0x0A,0x80,0x0C,0x0D,0x70,0x0F,0x10,
        0x6F,0x11,0x13,0x5E,0x14,0x16,0x3C,0x17,0x19,
        0x1A,0x1A,0x1C,0xF8,0x1D,0x1E,0xC6,0x20,0x21,
        0x93,0x23,0x24,0x60,0x26,0x27,0x3C,0x28,0x2A,
        0xF9,0x2B,0x2C,0xA5,0x2E,0x2F,0x60,0x31,0x32,
        0x1B,0x33,0x35,0xC6,0x36,0x37,0x61,0x39,0x3A,
        0x0B,0x3B,0x3D,0xA5,0x3E,0x3F,0x4F,0x40,0x42,
        0xD8,0x43,0x44,0x61,0x46,0x47,0xEA,0x48,0x49,
        0x62,0x4B,0x4C,0xEA,0x4D,0x4E,0x62,0x50,0x51,
        0xDA,0x52,0x53,0x41,0x55,0x56,0xB8,0x57,0x58,
        0x1E,0x59,0x5B,0x84,0x5C,0x5D,0xEB,0x5E,0x5F,
        0x30,0x61,0x62,0x96,0x63,0x64,0xEB,0x65,0x66,
        0x30,0x68,0x69,0x85,0x6A,0x6B,0xCA,0x6C,0x6D,
        0x0E,0x6E,0x70,0x42,0x71,0x72,0x86,0x73,0x74,
        0xB9,0x75,0x76,0xED,0x77,0x78,0x10,0x7A,0x7B,
        0x43,0x7C,0x7D,0x65,0x7E,0x7F,0x87,0x80,0x81,
        0xA9,0x82,0x83,0xCB,0x84,0x85,0xDC,0x86,0x87,
        0xEE,0x88,0x89,0xFF,0x8A,0x8B,0xFF,0x8C,0x8D,
        0x00,0x8F,0x90,0x00,0x91,0x92,0x00,0x93,0x94,
        0xFF,0x94,0x95,0xEF,0x96,0x97,0xDE,0x98,0x99,
        0xCD,0x9A,0x9B,0xBC,0x9C,0x9D,0xAA,0x9E,0x9F,
        0x89,0xA0,0xA1,0x78,0xA2,0xA3,0x56,0xA4,0xA5,
        0x34,0xA6,0xA7,0x12,0xA8,0xA9,0xF0,0xAA,0xAA,
        0xCE,0xAB,0xAC,0x9B,0xAD,0xAE,0x78,0xAF,0xB0,
        0x35,0xB1,0xB2,0x02,0xB3,0xB4,0xDE,0xB4,0xB5,
        0x9B,0xB6,0xB7,0x57,0xB8,0xB9,0x13,0xBA,0xBB,
        0xCF,0xBB,0xBC,0x8A,0xBD,0xBE,0x36,0xBF,0xC0,
        0xE1,0xC1,0xC1,0x9C,0xC2,0xC3,0x47,0xC4,0xC5,
        0xE1,0xC6,0xC6,0x9C,0xC7,0xC8,0x36,0xC9,0xCA,
        0xD0,0xCB,0xCB,0x69,0xCC,0xCD,0x03,0xCE,0xCF,
        0x9C,0xCF,0xD0,0x26,0xD1,0xD2,0xBF,0xD2,0xD3,
        0x48,0xD4,0xD5,0xC0,0xD6,0xD6,0x59,0xD7,0xD8,
        0xD1,0xD9,0xD9,0x59,0xDA,0xDB,0xC1,0xDC,0xDC,
        0x48,0xDD,0xDE,0xB0,0xDF,0xDF,0x27,0xE0,0xE1,
        0x9E,0xE1,0xE2,0x05,0xE3,0xE4,0x7B,0xE4,0xE5,
        0xD2,0xE6,0xE6,0x38,0xE7,0xE8,0x9E,0xE8,0xE9,
        0xF4,0xEA,0xEA,0x49,0xEB,0xEC,0xAF,0xEC,0xED,
        0xF4,0xEE,0xEE,0x49,0xEF,0xF0,0x8E,0xF0,0xF1,
        0xD3,0xF2,0xF2,0x17,0xF3,0xF4,0x5B,0xF4,0xF5,
        0x9F,0xF5,0xF6,0xD3,0xF7,0xF7,0x17,0xF8,0xF9,
        0x4A,0xF9,0xFA,0x7E,0xFA,0xFB,0xA1,0xFC,0xFC,
        0xD4,0xFD,0xFD,0x06,0xFE,0xFF,0x00,0xFF
    };

    static MS_U8 au8NormalGammaG[] =
    {
        0x80,0x00,0x01,0x80,0x03,0x04,0x91,0x06,0x07,
        0x91,0x09,0x0A,0x80,0x0C,0x0D,0x70,0x0F,0x10,
        0x6F,0x11,0x13,0x5E,0x14,0x16,0x3C,0x17,0x19,
        0x1A,0x1A,0x1C,0xF8,0x1D,0x1E,0xC6,0x20,0x21,
        0x93,0x23,0x24,0x60,0x26,0x27,0x3C,0x28,0x2A,
        0xF9,0x2B,0x2C,0xA5,0x2E,0x2F,0x60,0x31,0x32,
        0x1B,0x33,0x35,0xC6,0x36,0x37,0x61,0x39,0x3A,
        0x0B,0x3B,0x3D,0xA5,0x3E,0x3F,0x4F,0x40,0x42,
        0xD8,0x43,0x44,0x61,0x46,0x47,0xEA,0x48,0x49,
        0x62,0x4B,0x4C,0xEA,0x4D,0x4E,0x62,0x50,0x51,
        0xDA,0x52,0x53,0x41,0x55,0x56,0xB8,0x57,0x58,
        0x1E,0x59,0x5B,0x84,0x5C,0x5D,0xEB,0x5E,0x5F,
        0x30,0x61,0x62,0x96,0x63,0x64,0xEB,0x65,0x66,
        0x30,0x68,0x69,0x85,0x6A,0x6B,0xCA,0x6C,0x6D,
        0x0E,0x6E,0x70,0x42,0x71,0x72,0x86,0x73,0x74,
        0xB9,0x75,0x76,0xED,0x77,0x78,0x10,0x7A,0x7B,
        0x43,0x7C,0x7D,0x65,0x7E,0x7F,0x87,0x80,0x81,
        0xA9,0x82,0x83,0xCB,0x84,0x85,0xDC,0x86,0x87,
        0xEE,0x88,0x89,0xFF,0x8A,0x8B,0xFF,0x8C,0x8D,
        0x00,0x8F,0x90,0x00,0x91,0x92,0x00,0x93,0x94,
        0xFF,0x94,0x95,0xEF,0x96,0x97,0xDE,0x98,0x99,
        0xCD,0x9A,0x9B,0xBC,0x9C,0x9D,0xAA,0x9E,0x9F,
        0x89,0xA0,0xA1,0x78,0xA2,0xA3,0x56,0xA4,0xA5,
        0x34,0xA6,0xA7,0x12,0xA8,0xA9,0xF0,0xAA,0xAA,
        0xCE,0xAB,0xAC,0x9B,0xAD,0xAE,0x78,0xAF,0xB0,
        0x35,0xB1,0xB2,0x02,0xB3,0xB4,0xDE,0xB4,0xB5,
        0x9B,0xB6,0xB7,0x57,0xB8,0xB9,0x13,0xBA,0xBB,
        0xCF,0xBB,0xBC,0x8A,0xBD,0xBE,0x36,0xBF,0xC0,
        0xE1,0xC1,0xC1,0x9C,0xC2,0xC3,0x47,0xC4,0xC5,
        0xE1,0xC6,0xC6,0x9C,0xC7,0xC8,0x36,0xC9,0xCA,
        0xD0,0xCB,0xCB,0x69,0xCC,0xCD,0x03,0xCE,0xCF,
        0x9C,0xCF,0xD0,0x26,0xD1,0xD2,0xBF,0xD2,0xD3,
        0x48,0xD4,0xD5,0xC0,0xD6,0xD6,0x59,0xD7,0xD8,
        0xD1,0xD9,0xD9,0x59,0xDA,0xDB,0xC1,0xDC,0xDC,
        0x48,0xDD,0xDE,0xB0,0xDF,0xDF,0x27,0xE0,0xE1,
        0x9E,0xE1,0xE2,0x05,0xE3,0xE4,0x7B,0xE4,0xE5,
        0xD2,0xE6,0xE6,0x38,0xE7,0xE8,0x9E,0xE8,0xE9,
        0xF4,0xEA,0xEA,0x49,0xEB,0xEC,0xAF,0xEC,0xED,
        0xF4,0xEE,0xEE,0x49,0xEF,0xF0,0x8E,0xF0,0xF1,
        0xD3,0xF2,0xF2,0x17,0xF3,0xF4,0x5B,0xF4,0xF5,
        0x9F,0xF5,0xF6,0xD3,0xF7,0xF7,0x17,0xF8,0xF9,
        0x4A,0xF9,0xFA,0x7E,0xFA,0xFB,0xA1,0xFC,0xFC,
        0xD4,0xFD,0xFD,0x06,0xFE,0xFF,0x00,0xFF
    };

    static MS_U8 au8NormalGammaB[] =
    {
        0x80,0x00,0x01,0x80,0x03,0x04,0x91,0x06,0x07,
        0x91,0x09,0x0A,0x80,0x0C,0x0D,0x70,0x0F,0x10,
        0x6F,0x11,0x13,0x5E,0x14,0x16,0x3C,0x17,0x19,
        0x1A,0x1A,0x1C,0xF8,0x1D,0x1E,0xC6,0x20,0x21,
        0x93,0x23,0x24,0x60,0x26,0x27,0x3C,0x28,0x2A,
        0xF9,0x2B,0x2C,0xA5,0x2E,0x2F,0x60,0x31,0x32,
        0x1B,0x33,0x35,0xC6,0x36,0x37,0x61,0x39,0x3A,
        0x0B,0x3B,0x3D,0xA5,0x3E,0x3F,0x4F,0x40,0x42,
        0xD8,0x43,0x44,0x61,0x46,0x47,0xEA,0x48,0x49,
        0x62,0x4B,0x4C,0xEA,0x4D,0x4E,0x62,0x50,0x51,
        0xDA,0x52,0x53,0x41,0x55,0x56,0xB8,0x57,0x58,
        0x1E,0x59,0x5B,0x84,0x5C,0x5D,0xEB,0x5E,0x5F,
        0x30,0x61,0x62,0x96,0x63,0x64,0xEB,0x65,0x66,
        0x30,0x68,0x69,0x85,0x6A,0x6B,0xCA,0x6C,0x6D,
        0x0E,0x6E,0x70,0x42,0x71,0x72,0x86,0x73,0x74,
        0xB9,0x75,0x76,0xED,0x77,0x78,0x10,0x7A,0x7B,
        0x43,0x7C,0x7D,0x65,0x7E,0x7F,0x87,0x80,0x81,
        0xA9,0x82,0x83,0xCB,0x84,0x85,0xDC,0x86,0x87,
        0xEE,0x88,0x89,0xFF,0x8A,0x8B,0xFF,0x8C,0x8D,
        0x00,0x8F,0x90,0x00,0x91,0x92,0x00,0x93,0x94,
        0xFF,0x94,0x95,0xEF,0x96,0x97,0xDE,0x98,0x99,
        0xCD,0x9A,0x9B,0xBC,0x9C,0x9D,0xAA,0x9E,0x9F,
        0x89,0xA0,0xA1,0x78,0xA2,0xA3,0x56,0xA4,0xA5,
        0x34,0xA6,0xA7,0x12,0xA8,0xA9,0xF0,0xAA,0xAA,
        0xCE,0xAB,0xAC,0x9B,0xAD,0xAE,0x78,0xAF,0xB0,
        0x35,0xB1,0xB2,0x02,0xB3,0xB4,0xDE,0xB4,0xB5,
        0x9B,0xB6,0xB7,0x57,0xB8,0xB9,0x13,0xBA,0xBB,
        0xCF,0xBB,0xBC,0x8A,0xBD,0xBE,0x36,0xBF,0xC0,
        0xE1,0xC1,0xC1,0x9C,0xC2,0xC3,0x47,0xC4,0xC5,
        0xE1,0xC6,0xC6,0x9C,0xC7,0xC8,0x36,0xC9,0xCA,
        0xD0,0xCB,0xCB,0x69,0xCC,0xCD,0x03,0xCE,0xCF,
        0x9C,0xCF,0xD0,0x26,0xD1,0xD2,0xBF,0xD2,0xD3,
        0x48,0xD4,0xD5,0xC0,0xD6,0xD6,0x59,0xD7,0xD8,
        0xD1,0xD9,0xD9,0x59,0xDA,0xDB,0xC1,0xDC,0xDC,
        0x48,0xDD,0xDE,0xB0,0xDF,0xDF,0x27,0xE0,0xE1,
        0x9E,0xE1,0xE2,0x05,0xE3,0xE4,0x7B,0xE4,0xE5,
        0xD2,0xE6,0xE6,0x38,0xE7,0xE8,0x9E,0xE8,0xE9,
        0xF4,0xEA,0xEA,0x49,0xEB,0xEC,0xAF,0xEC,0xED,
        0xF4,0xEE,0xEE,0x49,0xEF,0xF0,0x8E,0xF0,0xF1,
        0xD3,0xF2,0xF2,0x17,0xF3,0xF4,0x5B,0xF4,0xF5,
        0x9F,0xF5,0xF6,0xD3,0xF7,0xF7,0x17,0xF8,0xF9,
        0x4A,0xF9,0xFA,0x7E,0xFA,0xFB,0xA1,0xFC,0xFC,
        0xD4,0xFD,0xFD,0x06,0xFE,0xFF,0x00,0xFF
    };

#endif
